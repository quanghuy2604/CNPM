<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AUAAAAAAAAAAAAAAAAAAAAAAAAAAAP/Z
</value>
  </data>
</root>